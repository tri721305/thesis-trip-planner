@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700;800&display=swap");

:root {
  --card-width: 200px;
  --card-height: 300px;
  --card-transition-duration: 800ms;
  --card-transition-easing: ease;
}

.app {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.787);
  overflow: hidden;
}

.app *,
.app *::before,
.app *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.app button {
  border: none;
  background: none;
  cursor: pointer;
}

.app button:focus {
  outline: none;
  border: none;
}

.app__bg {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -5;
  filter: blur(8px);
  pointer-events: none;
  user-select: none;
  overflow: hidden;
}

.app__bg::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: #000;
  z-index: 1;
  opacity: 0.8;
}

.app__bg__image {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) translateX(var(--image-translate-offset, 0));
  width: 180%;
  height: 180%;
  transition:
    transform 1000ms ease,
    opacity 1000ms ease;
  overflow: hidden;
}

.app__bg__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.currentImage {
  opacity: 1;
  --image-translate-offset: 0;
}

.previousImage,
.nextImage {
  opacity: 0;
}

.previousImage {
  --image-translate-offset: -25%;
}

.nextImage {
  --image-translate-offset: 25%;
}

.cardList {
  position: absolute;
  width: calc(3 * var(--card-width));
  height: auto;
}

.cardList__btn {
  --btn-size: 50px;
  width: var(--btn-size);
  height: var(--btn-size);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 100;
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
}

.cardList__btn:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-50%) scale(1.1);
}

.cardList__btn.btn--left {
  left: -10%;
}

.cardList__btn.btn--right {
  right: -10%;
}

.cardList__btn .icon {
  width: 100%;
  height: 100%;
}

.cardList__btn .icon svg {
  width: 100%;
  height: 100%;
}

.cardList .cards__wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  perspective: 1000px;
}

.card {
  --card-translateY-offset: 100vh;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) translateX(var(--card-translateX-offset, 0))
    translateY(var(--card-translateY-offset, 0))
    rotateY(var(--card-rotation-offset, 0)) scale(var(--card-scale-offset, 1));
  display: inline-block;
  width: var(--card-width);
  height: var(--card-height);
  transition: transform var(--card-transition-duration)
    var(--card-transition-easing);
  user-select: none;
}

.card::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: #000;
  z-index: 1;
  transition: opacity var(--card-transition-duration)
    var(--card-transition-easing);
  opacity: calc(1 - var(--opacity, 0.8));
}

.card__image {
  position: relative;
  width: 100%;
  height: 100%;
}

.card__image img {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Specific card states */
.currentCard {
  --current-card-rotation-offset: 0;
  --card-translateX-offset: 0;
  --card-rotation-offset: var(--current-card-rotation-offset, 0);
  --card-scale-offset: 1.2;
  --opacity: 0.8;
}

.previousCard {
  --card-translateX-offset: calc(-1 * var(--card-width) * 1.1);
  --card-rotation-offset: 25deg;
  --card-scale-offset: 0.9;
  --opacity: 0.4;
}

.nextCard {
  --card-translateX-offset: calc(var(--card-width) * 1.1);
  --card-rotation-offset: -25deg;
  --card-scale-offset: 0.9;
  --opacity: 0.4;
}

.infoList {
  position: absolute;
  width: calc(3 * var(--card-width));
  height: var(--card-height);
  pointer-events: none;
}

.infoList .info__wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
  perspective: 1000px;
  transform-style: preserve-3d;
}

.info {
  margin-bottom: calc(var(--card-height) / 8);
  margin-left: calc(var(--card-width) / 1.5);
  transform: translateZ(2rem);
  transition: transform var(--card-transition-duration)
    var(--card-transition-easing);
}

.info :global(.text) {
  position: relative;
  font-family: "Montserrat";
  font-size: calc(var(--card-width) * var(--text-size-offset, 0.2));
  white-space: nowrap;
  color: #fff;
  width: fit-content;
}

.info :global(.name),
.info :global(.location) {
  text-transform: uppercase;
}

.info :global(.name) {
  font-weight: 800;
}

.info :global(.location) {
  --mg-left: 40px;
  --text-size-offset: 0.12;
  font-weight: 600;
  margin-left: var(--mg-left);
  margin-bottom: calc(var(--mg-left) / 2);
  padding-bottom: 0.8rem;
}

.info :global(.location)::before,
.info :global(.location)::after {
  content: "";
  position: absolute;
  background: #fff;
  left: 0%;
  transform: translate(calc(-1 * var(--mg-left)), -50%);
}

.info :global(.location)::before {
  top: 50%;
  width: 20px;
  height: 5px;
}

.info :global(.location)::after {
  bottom: 0;
  width: 60px;
  height: 2px;
}

.info :global(.description) {
  --text-size-offset: 0.065;
  font-weight: 500;
}

.currentInfo {
  opacity: 1;
  display: block;
}

.previousInfo,
.nextInfo {
  opacity: 0;
  display: none;
}

.loading__wrapper {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #000;
  z-index: 200;
}

.loading__wrapper .loader--text {
  color: #fff;
  font-family: "Montserrat";
  font-weight: 500;
  margin-bottom: 1.4rem;
}

.loading__wrapper .loader {
  position: relative;
  width: 200px;
  height: 2px;
  background: rgba(255, 255, 255, 0.25);
}

.loading__wrapper .loader span {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: red;
  transform: scaleX(0);
  transform-origin: left;
}

/* Alternative methods for darkening background without overlay div */

/* Method 1: Using linear-gradient overlay with background-image */
.appWithGradientOverlay {
  background:
    linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)),
    /* Dark overlay */ url("/images/Saigon.jpg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

/* Method 2: Using pseudo-element overlay */
.appWithPseudoOverlay {
  position: relative;
  background-image: url("/images/Saigon.jpg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.appWithPseudoOverlay::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.4);
  z-index: -1;
}

/* Method 3: Using inset box-shadow */
.appWithInsetShadow {
  background-image: url("/images/Saigon.jpg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  box-shadow: inset 0 0 0 1000px rgba(0, 0, 0, 0.4);
}

/* Method 4: Multiple filter effects */
.appWithFilters {
  background-image: url("/images/Saigon.jpg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: brightness(0.6) contrast(1.3) saturate(0.9);
}

/* Method 5: CSS custom properties for dynamic control */
.appWithCustomProps {
  background-image: url("/images/Saigon.jpg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  filter: brightness(var(--bg-brightness, 0.7))
    contrast(var(--bg-contrast, 1.2));
}

/* Z-index layers for overlay system */
.backgroundOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* background: rgba(0, 0, 0, 0.4); */
  /* background: #f7ece2; */
  background: #f7ece2;
  background: linear-gradient(
    156deg,
    rgba(247, 236, 226, 1) 0%,
    rgba(255, 176, 102, 1) 77%
  );
  pointer-events: none;
  z-index: 1;
}

.contentLayer {
  position: relative;
  z-index: 2;
}

/* Alternative overlay options */
.lightOverlay {
  background: rgba(0, 0, 0, 0.3);
}

.mediumOverlay {
  /* background: rgba(0, 0, 0, 0.5); */
}

.darkOverlay {
  background: rgba(0, 0, 0, 0.6);
}

.gradientOverlay {
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.3) 0%,
    rgba(0, 0, 0, 0.5) 50%,
    rgba(0, 0, 0, 0.7) 100%
  );
}

@media only screen and (min-width: 800px) {
  :root {
    --card-width: 250px;
    --card-height: 400px;
  }
}
